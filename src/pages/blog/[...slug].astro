---
import { getCollection } from 'astro:content';
import Main from '../../layouts/Main.astro';
import { calculateReadingTime } from '../../utils/blog';
import TableOfContents from '../../components/TableOfContents.astro';
import ReadingProgress from '../../components/ReadingProgress.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog', ({ data }) => {
        return import.meta.env.PROD ? !data.draft : true;
    });

    return posts.map(post => ({
        params: { 
            // Create URL pattern: YYYY/MM/DD/slug
            slug: `${post.data.pubDate.getFullYear()}/${
                post.data.pubDate.getMonth() + 1
            }/${
                post.data.pubDate.getDate()
            }/${post.slug}` 
        },
        props: { post },
    }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Format the date
const formattedDate = new Date(post.data.pubDate).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
});
---

<Main title={post.data.title} currentPage="/blog">
    <ReadingProgress />
    <article class="max-w-3xl mx-auto py-12">
        <header class="mb-12">
            <div class="flex gap-2 mb-4">
                {post.data.tags.map(tag => (
                    <span class="px-3 py-1 bg-zinc-700 rounded-full text-xs">
                        {tag}
                    </span>
                ))}
            </div>
            
            <h1 class="text-4xl font-bold mb-4" data-ani="slide-in-blur">
                {post.data.title}
            </h1>
            
            <div class="flex items-center gap-4 text-sm text-zinc-400 mb-6">
                <time datetime={post.data.pubDate.toISOString()}>
                    {formattedDate}
                </time>
                <span>â€¢</span>
                <span>{calculateReadingTime(post.body)} min read</span>
            </div>

            {post.data.image && (
                <img 
                    src={post.data.image} 
                    alt={post.data.title}
                    loading="lazy"
                    class="w-full h-[400px] object-cover rounded-xl mb-8"
                />
            )}
            
            <p class="text-xl text-zinc-300" data-ani="fade-up" data-delay="200">
                {post.data.excerpt}
            </p>
        </header>

        <div class="prose prose-invert prose-emerald max-w-none markdown">
            <Content />
        </div>

        {post.data.updatedDate && (
            <div class="mt-8 text-sm text-zinc-400">
                Last updated on {new Date(post.data.updatedDate).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                })}
            </div>
        )}
    </article>
</Main>
