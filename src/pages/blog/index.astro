---
import Main from "../../layouts/Main.astro";
import { getCollection } from "astro:content";
import { calculateReadingTime, createSlug } from "../../utils/blog";
import Terminal from "../../components/Terminal.astro";

const posts = await getCollection('blog', ({ data }) => {
    return import.meta.env.PROD ? !data.draft : true;
}).then(posts => posts.sort((a, b) => {
    return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime();
}));
---

<Main currentPage="/blog" title="Blog">
    <Terminal>
        <h2 class="text-xl font-bold mb-6 text-everforest-green">Blog Posts</h2>
        <div class="space-y-8">
            {posts.map((post) => {
                const readingTime = calculateReadingTime(post.body);
                const slug = createSlug(new Date(post.data.pubDate), post.slug);
                const formattedDate = new Date(post.data.pubDate).toISOString();
                return (
                    <article class="group">
                        <a href={`/blog/${slug}`} class="block space-y-2 hover:no-underline">
                            <h3 class="text-lg font-bold text-everforest-blue group-hover:text-everforest-aqua transition-colors">
                                {post.data.title}
                            </h3>
                            <div class="flex items-center gap-4 text-sm text-everforest-gray">
                                <time datetime={formattedDate}>
                                    {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: 'long',
                                        day: 'numeric'
                                    })}
                                </time>
                                <span>·</span>
                                <span>{readingTime} min read</span>
                                {post.data.featured && (
                                    <>
                                        <span>·</span>
                                        <span class="text-everforest-yellow">Featured</span>
                                    </>
                                )}
                            </div>
                            <p class="text-everforest-fg/80">{post.data.excerpt}</p>
                            <div class="flex flex-wrap gap-2 mt-2">
                                {post.data.tags?.map((tag: string) => (
                                    <span class="px-2 py-1 text-xs rounded-full bg-everforest-bg-light text-everforest-aqua">
                                        {tag}
                                    </span>
                                ))}
                            </div>
                        </a>
                    </article>
                );
            })}
        </div>
    </Terminal>
</Main>