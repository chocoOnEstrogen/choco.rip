---
import Layout from "../../layouts/Main.astro";
import { getCollection } from "astro:content";
import config from "../../config";
import ReadingProgress from '../../components/ReadingProgress.astro';


export async function getStaticPaths() {
    const gardenNotes = await getCollection("garden");
    return gardenNotes.map(note => ({
        params: { slug: note.slug },
        props: { note },
    }));
}

const { note } = Astro.props;
const { Content } = await note.render();

// Get other notes in the same category for the "Related Growth" section
const relatedNotes = (await getCollection("garden"))
    .filter(post => post.data.category === note.data.category && post.slug !== note.slug)
    .sort((a, b) => b.data.lastModified.valueOf() - a.data.lastModified.valueOf())
    .slice(0, 3);
---

<Layout 
    title={`${note.data.title} | Digital Garden`}
    description={note.data.description}
>
    <ReadingProgress />
        <div class="mb-8">
            <nav class="text-sm mb-4">
                <a href="/garden" class="text-emerald-600 dark:text-emerald-400 hover:text-emerald-700 dark:hover:text-emerald-300">
                    ‚Üê Back to the Forest
                </a>
            </nav>

            <div class="flex items-center gap-2 mb-2">
                <a 
                    href={`/garden#${note.data.category}`}
                    class="text-sm px-3 py-1 bg-emerald-100/10 dark:bg-emerald-900/20 rounded-full hover:bg-emerald-100/20 dark:hover:bg-emerald-900/30 transition"
                >
                    {note.data.category}
                </a>
                <span class={`px-2 py-1 text-xs rounded ${
                    note.data.stage === 'seedling' ? 'bg-emerald-100/20 text-emerald-700 dark:text-emerald-300' :
                    note.data.stage === 'budding' ? 'bg-amber-100/20 text-amber-700 dark:text-amber-300' :
                    'bg-teal-100/20 text-teal-700 dark:text-teal-300'
                }`}>
                    {note.data.stage}
                </span>
            </div>

            <h1 class="text-4xl font-bold mb-4">{note.data.title}</h1>
            
            <div class="flex flex-wrap gap-2 mb-6">
                {note.data.tags.map(tag => (
                    <span class="px-2 py-1 bg-emerald-100/10 dark:bg-emerald-900/20 rounded text-sm text-emerald-700 dark:text-emerald-300">
                        {tag}
                    </span>
                ))}
            </div>

            <p class="text-sm text-emerald-700/70 dark:text-emerald-300/70">
                Last tended: {new Date(note.data.lastModified).toLocaleDateString()}
            </p>
        </div>

        <div class="prose dark:prose-invert prose-emerald max-w-none markdown">
            <Content />
        </div>

        {relatedNotes.length > 0 && (
            <aside class="mt-16 pt-8 border-t border-emerald-100/10 dark:border-emerald-900/20">
                <h2 class="text-2xl font-semibold mb-6">Related Growth</h2>
                <div class="grid gap-6 md:grid-cols-3">
                    {relatedNotes.map(related => (
                        <a 
                            href={`/garden/${related.slug}`}
                            class="p-4 bg-gradient-to-br from-emerald-50/5 to-transparent dark:from-emerald-900/10 dark:to-transparent rounded-lg hover:shadow-md transition border border-emerald-100/10 dark:border-emerald-900/20"
                        >
                            <h3 class="font-semibold mb-2 hover:text-emerald-500 transition">
                                {related.data.title}
                            </h3>
                            <p class="text-sm text-gray-600 dark:text-gray-300 line-clamp-2">
                                {related.data.description}
                            </p>
                        </a>
                    ))}
                </div>
            </aside>
        )}
</Layout>