<%- contentFor('body') %>

<div class="container mt-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <div>
      <h2 class="mb-0">URL Shortener</h2>
      <p class="text-muted mb-0">Create and manage short URLs</p>
    </div>
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createUrlModal">
      <i class="fas fa-link me-2"></i>Create Short URL
    </button>
  </div>

  <div class="card border-0 shadow-sm bg-glass">
    <div class="card-body">
      <div class="table-responsive">
        <table class="table">
          <thead>
            <tr>
              <th>SHORT URL</th>
              <th>ORIGINAL URL</th>
              <th>CLICKS</th>
              <th>CREATED</th>
              <th>EXPIRES</th>
              <th>ACTIONS</th>
            </tr>
          </thead>
          <tbody>
            <% urls.forEach(url => { %>
              <tr>
                <td>
                  <a href="/s/<%= url.shortCode %>" target="_blank" class="text-primary">
                    <%= url.shortCode %>
                  </a>
                </td>
                <td class="text-truncate" style="max-width: 200px;">
                  <%= url.originalUrl %>
                </td>
                <td><%= url.clicks %></td>
                <td><%= formatDistance(url.createdAt, new Date(), { addSuffix: true }) %></td>
                <td>
                  <%= url.expiresAt ? formatDistance(url.expiresAt, new Date(), { addSuffix: true }) : 'Never' %>
                </td>
                <td>
                  <button class="btn btn-sm btn-link" onclick="viewAnalytics('<%= url.shortCode %>')">
                    <i class="fas fa-chart-line"></i>
                  </button>
                  <button class="btn btn-sm btn-link text-danger" onclick="confirmDelete('<%= url.shortCode %>')">
                    <i class="fas fa-trash"></i>
                  </button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Create URL Modal -->
<div class="modal fade" id="createUrlModal">
  <div class="modal-dialog">
    <div class="modal-content bg-glass">
      <div class="modal-header">
        <h5 class="modal-title">Create Short URL</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <form id="createUrlForm">
        <div class="modal-body">
          <div class="mb-3">
            <label class="form-label">URL to Shorten</label>
            <input type="url" class="form-control" name="url" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Custom Short Code (Optional)</label>
            <input type="text" class="form-control" name="customCode" pattern="[a-zA-Z0-9-_]+" 
                   title="Only letters, numbers, hyphens, and underscores allowed">
            <small class="text-muted">Leave empty for auto-generated code</small>
          </div>
          <div class="mb-3">
            <label class="form-label">Title (Optional)</label>
            <input type="text" class="form-control" name="title">
          </div>
          <div class="mb-3">
            <label class="form-label">Expires In (Hours)</label>
            <input type="number" class="form-control" name="expiresIn">
            <small class="text-muted">Leave empty for no expiration</small>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Create</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Analytics Modal -->
<div class="modal fade" id="analyticsModal">
  <div class="modal-dialog modal-lg">
    <div class="modal-content bg-glass">
      <div class="modal-header">
        <h5 class="modal-title">URL Analytics</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-6 mb-4">
            <div class="card h-100">
              <div class="card-body">
                <h6 class="card-title">Clicks by Country</h6>
                <canvas id="countryChart"></canvas>
              </div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <div class="card h-100">
              <div class="card-body">
                <h6 class="card-title">Clicks by Device</h6>
                <canvas id="deviceChart"></canvas>
              </div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <div class="card h-100">
              <div class="card-body">
                <h6 class="card-title">Clicks by Browser</h6>
                <canvas id="browserChart"></canvas>
              </div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <div class="card h-100">
              <div class="card-body">
                <h6 class="card-title">Clicks by Hour</h6>
                <canvas id="hourlyChart"></canvas>
              </div>
            </div>
          </div>
        </div>
        <div class="card">
          <div class="card-body">
            <h6 class="card-title">Recent Clicks</h6>
            <div class="table-responsive">
              <table class="table table-sm" id="recentClicksTable">
                <thead>
                  <tr>
                    <th>TIME</th>
                    <th>LOCATION</th>
                    <th>DEVICE</th>
                    <th>BROWSER</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// Form submission handler
document.getElementById('createUrlForm').addEventListener('submit', async (e) => {
  e.preventDefault()
  const formData = new FormData(e.target)
  const data = Object.fromEntries(formData)
  
  try {
    const response = await fetch('/s/api/urls', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    })
    
    if (!response.ok) {
      const error = await response.json()
      throw new Error(error.error || 'Failed to create URL')
    }
    
    const result = await response.json()
    if (data.customCode && data.customCode !== result.shortCode) {
      alert(`Your custom code was already taken. Generated code: ${result.shortCode}`)
    }
    
    location.reload()
  } catch (err) {
    alert(err.message || 'Error creating short URL')
  }
})

// Analytics viewer
async function viewAnalytics(code) {
  try {
    const response = await fetch(`/s/api/urls/${code}/analytics`)
    const data = await response.json()
    
    // Create charts
    new Chart(document.getElementById('countryChart'), {
      type: 'pie',
      data: {
        labels: Object.keys(data.clicksByCountry),
        datasets: [{
          data: Object.values(data.clicksByCountry),
          backgroundColor: ['#4f46e5', '#0ea5e9', '#8b5cf6', '#06b6d4', '#6366f1']
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'bottom'
          }
        }
      }
    })
    
    new Chart(document.getElementById('deviceChart'), {
      type: 'doughnut',
      data: {
        labels: Object.keys(data.clicksByDevice),
        datasets: [{
          data: Object.values(data.clicksByDevice),
          backgroundColor: ['#0ea5e9', '#8b5cf6', '#06b6d4']
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'bottom'
          }
        }
      }
    })

    new Chart(document.getElementById('browserChart'), {
      type: 'pie',
      data: {
        labels: Object.keys(data.clicksByBrowser),
        datasets: [{
          data: Object.values(data.clicksByBrowser),
          backgroundColor: ['#4f46e5', '#0ea5e9', '#8b5cf6', '#06b6d4', '#6366f1']
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'bottom'
          }
        }
      }
    })

    new Chart(document.getElementById('hourlyChart'), {
      type: 'line',
      data: {
        labels: Array.from({ length: 24 }, (_, i) => `${i}:00`),
        datasets: [{
          label: 'Clicks',
          data: Array.from({ length: 24 }, (_, i) => data.clicksByHour[i] || 0),
          borderColor: '#4f46e5',
          backgroundColor: 'rgba(79, 70, 229, 0.1)',
          fill: true,
          tension: 0.4
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              stepSize: 1
            }
          }
        },
        plugins: {
          legend: {
            display: false
          }
        }
      }
    })

    // Update recent clicks table
    const tbody = document.getElementById('recentClicksTable').querySelector('tbody')
    tbody.innerHTML = data.recentClicks.map(click => `
      <tr>
        <td>${new Date(click.timestamp).toLocaleString()}</td>
        <td>${click.city || 'Unknown'}, ${click.country || 'Unknown'}</td>
        <td>${click.device || 'Unknown'}</td>
        <td>${click.browser || 'Unknown'}</td>
      </tr>
    `).join('')

    new bootstrap.Modal(document.getElementById('analyticsModal')).show()
  } catch (err) {
    alert('Error loading analytics')
  }
}

// Delete URL handler
async function confirmDelete(code) {
  if (confirm('Are you sure you want to delete this URL?')) {
    try {
      const response = await fetch(`/s/api/urls/${code}`, {
        method: 'DELETE'
      })
      
      if (!response.ok) throw new Error('Failed to delete URL')
      
      location.reload()
    } catch (err) {
      alert('Error deleting URL')
    }
  }
}
</script> 